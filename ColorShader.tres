[gd_resource type="VisualShader" load_steps=10 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "ColorPower"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "alpha"

[resource]
code = "shader_type canvas_item;
uniform float ColorPower;



void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// Input:5

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out6p0.xy);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Input:8
	vec3 n_out8p0 = COLOR.rgb;

// ScalarOp:7
	float n_out7p0 = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out8p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarUniform:11
	float n_out11p0 = ColorPower;

// ScalarOp:12
	float n_out12p0 = n_out7p0 * n_out11p0;

// Input:9
	float n_out9p0 = COLOR.a;

// ScalarOp:10
	float n_out10p0 = n_out4p1 * n_out9p0;

// Output:0
	COLOR.rgb = vec3(n_out12p0);
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -397, -108 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 600, 100 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -200, -140 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -460, -40 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -440, -120 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 80, -80 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( -200, 0 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -140, 200 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 120, 140 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -200, 80 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 260, 20 )
nodes/fragment/connections = PoolIntArray( 6, 0, 4, 0, 5, 0, 4, 2, 4, 0, 7, 0, 8, 0, 7, 1, 4, 1, 10, 0, 9, 0, 10, 1, 10, 0, 0, 1, 7, 0, 12, 0, 11, 0, 12, 1, 12, 0, 0, 0 )
